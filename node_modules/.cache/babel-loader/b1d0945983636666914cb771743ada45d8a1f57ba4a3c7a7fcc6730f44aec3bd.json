{"ast":null,"code":"var _jsxFileName = \"E:\\\\Django_Projects\\\\mynotes_frontend\\\\src\\\\pages\\\\Notepage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notepage(history) {\n  _s();\n  const {\n    noteId\n  } = useParams();\n  const navigate = useNavigate();\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    if (noteId === 'new') return;\n    let response = await fetch(`/api/note/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let updateNote = async () => {\n    fetch(`/api/note/${noteId}/update`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let handleSubmit = () => {\n    if (noteId === \"new\" && note === null) {\n      console.log(\"nnnnnnn\");\n      navigate('/');\n    }\n    if (noteId !== \"new\" && note.body === '') {\n      deleteNote();\n    } else if (noteId !== \"new\") {\n      updateNote();\n    } else if (noteId === \"new\" && note.body !== null) {\n      createNote();\n    }\n    navigate('/');\n  };\n  let deleteNote = () => {\n    fetch(`/api/note/${noteId}/delete`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate('/');\n  };\n  let createNote = async () => {\n    fetch(`/api/note/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), noteId !== \"new\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 40\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(Notepage, \"B9MbIN4bR8+11rUwglo30/z78NA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Notepage;\nexport default Notepage;\nvar _c;\n$RefreshReg$(_c, \"Notepage\");","map":{"version":3,"names":["React","useEffect","useState","ReactComponent","ArrowLeft","useParams","useNavigate","jsxDEV","_jsxDEV","Notepage","history","_s","noteId","navigate","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","handleSubmit","console","log","deleteNote","createNote","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["E:/Django_Projects/mynotes_frontend/src/pages/Notepage.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect,useState } from 'react'\r\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Notepage( history ) {\r\n\r\n    const { noteId } = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    let [note,setNote] = useState(null)\r\n\r\n    \r\n    useEffect( () => {\r\n      getNote()\r\n      \r\n\r\n    },[noteId])\r\n    \r\n\r\n    let getNote = async ()=> {\r\n      if (noteId === 'new') return\r\n\r\n      let response = await fetch(`/api/note/${noteId}`)\r\n\r\n      let data = await response.json()\r\n\r\n      setNote(data)\r\n\r\n    }\r\n\r\n    let updateNote= async ()=>{\r\n\r\n      fetch(`/api/note/${noteId}/update`,{\r\n        method : 'PUT',\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        },\r\n        body : JSON.stringify(note)\r\n\r\n\r\n      })\r\n\r\n\r\n    }\r\n\r\n    let handleSubmit = ()=>{\r\n      if(noteId === \"new\" && note === null) {\r\n        console.log(\"nnnnnnn\")\r\n        navigate('/')\r\n      }\r\n      \r\n      if( noteId !== \"new\" && note.body === ''){\r\n        deleteNote()\r\n      }\r\n      else if( noteId !== \"new\" ){\r\n        updateNote()\r\n      }\r\n      else if( noteId === \"new\" && note.body !== null){\r\n    \r\n        createNote()\r\n      }\r\n      \r\n      navigate('/')\r\n\r\n    }\r\n\r\n    let deleteNote = ()=>{\r\n      fetch(`/api/note/${noteId}/delete`,{\r\n        method : 'DELETE',\r\n        headers : {\r\n        'Content-Type' : 'application/json'\r\n        }\r\n\r\n      })\r\n      navigate('/');\r\n\r\n    }\r\n\r\n    let createNote = async ()=>{\r\n\r\n      fetch(`/api/note/create`,{\r\n        method : 'POST',\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        },\r\n        body : JSON.stringify(note)\r\n\r\n      })\r\n\r\n\r\n    }\r\n\r\n    \r\n    \r\n  return (\r\n    <div className=\"note\" >\r\n            <div className=\"note-header\">\r\n                <h3>\r\n                    <ArrowLeft onClick={handleSubmit}/> \r\n                </h3>\r\n                { noteId !== \"new\" ? ( <button onClick={deleteNote}>Delete</button> ):\r\n                  ( <button onClick={handleSubmit}>Done</button> )\r\n                }\r\n                \r\n                \r\n\r\n            </div>\r\n            <textarea onChange={ (e)=>{setNote({...note,'body':e.target.value })} } defaultValue={note?.body}></textarea>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Notepage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}