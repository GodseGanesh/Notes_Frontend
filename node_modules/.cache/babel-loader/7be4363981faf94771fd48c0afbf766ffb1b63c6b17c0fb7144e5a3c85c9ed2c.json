{"ast":null,"code":"var _jsxFileName = \"E:\\\\Django_Projects\\\\mynotes_frontend\\\\src\\\\pages\\\\Notepage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notepage() {\n  _s();\n  const {\n    noteId\n  } = useParams();\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    let response = await fetch(`/api/note/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let updateNote = async () => {\n    fetch(`/api/note/${noteId}/update`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Notepage, \"Uuq4nPnwsO/SMo0YxATz9QU7l8Q=\", false, function () {\n  return [useParams];\n});\n_c = Notepage;\nexport default Notepage;\nvar _c;\n$RefreshReg$(_c, \"Notepage\");","map":{"version":3,"names":["React","useEffect","useState","ReactComponent","ArrowLeft","useParams","jsxDEV","_jsxDEV","Notepage","_s","noteId","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["E:/Django_Projects/mynotes_frontend/src/pages/Notepage.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect,useState } from 'react'\r\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction Notepage( ) {\r\n\r\n    const { noteId } = useParams();\r\n\r\n    let [note,setNote] = useState(null)\r\n\r\n    \r\n    useEffect( () => {\r\n      getNote()\r\n\r\n    },[noteId])\r\n    \r\n\r\n    let getNote = async ()=> {\r\n\r\n      let response = await fetch(`/api/note/${noteId}`)\r\n\r\n      let data = await response.json()\r\n\r\n      setNote(data)\r\n\r\n    }\r\n\r\n    let updateNote= async ()=>{\r\n\r\n      fetch(`/api/note/${noteId}/update`,{\r\n        method : 'PUT',\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        },\r\n        body : JSON.stringify(note)\r\n\r\n\r\n      })\r\n\r\n\r\n    }\r\n\r\n    \r\n    \r\n  return (\r\n    <div className=\"note\" >\r\n            <div className=\"note-header\">\r\n                <h3>\r\n                    <ArrowLeft />\r\n                </h3>\r\n                \r\n\r\n            </div>\r\n            <textarea onChange={ (e)=>{setNote({...note,'body':e.target.value })} } defaultValue={note?.body}></textarea>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Notepage"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,cAAc,IAAIC,SAAS,QAAQ,0BAA0B;AACtE,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,SAASC,QAAQA,CAAA,EAAI;EAAAC,EAAA;EAEjB,MAAM;IAAEC;EAAO,CAAC,GAAGL,SAAS,CAAC,CAAC;EAE9B,IAAI,CAACM,IAAI,EAACC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAGnCD,SAAS,CAAE,MAAM;IACfY,OAAO,CAAC,CAAC;EAEX,CAAC,EAAC,CAACH,MAAM,CAAC,CAAC;EAGX,IAAIG,OAAO,GAAG,MAAAA,CAAA,KAAW;IAEvB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAaL,MAAM,EAAE,CAAC;IAEjD,IAAIM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAEhCL,OAAO,CAACI,IAAI,CAAC;EAEf,CAAC;EAED,IAAIE,UAAU,GAAE,MAAAA,CAAA,KAAU;IAExBH,KAAK,CAAC,aAAaL,MAAM,SAAS,EAAC;MACjCS,MAAM,EAAG,KAAK;MACdC,OAAO,EAAG;QACR,cAAc,EAAG;MACnB,CAAC;MACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACZ,IAAI;IAG5B,CAAC,CAAC;EAGJ,CAAC;EAIH,oBACEJ,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACblB,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBlB,OAAA;QAAAkB,QAAA,eACIlB,OAAA,CAACH,SAAS;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGJ,CAAC,eACNtB,OAAA;MAAUuB,QAAQ,EAAIC,CAAC,IAAG;QAACnB,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAC,MAAM,EAACoB,CAAC,CAACC,MAAM,CAACC;QAAM,CAAC,CAAC;MAAA,CAAG;MAACC,YAAY,EAAEvB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5G,CAAC;AAEd;AAACpB,EAAA,CApDQD,QAAQ;EAAA,QAEMH,SAAS;AAAA;AAAA8B,EAAA,GAFvB3B,QAAQ;AAsDjB,eAAeA,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}